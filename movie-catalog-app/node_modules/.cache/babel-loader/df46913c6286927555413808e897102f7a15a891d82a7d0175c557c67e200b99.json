{"ast":null,"code":"var _jsxFileName = \"/home/quimrobres/Desktop/QUIMO/movie-catalog-tech-test/src/views/Comments/Comments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { moviesServices } from \"../../infraestructure/services/movies.services\";\nimport Button from \"../../components/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [addComment, setAddComment] = useState(false);\n  const [movieData, setMovieData] = useState([]);\n  useEffect(() => {\n    const fetchData = () => {\n      moviesServices().getMovieComments(id).then(data => setMovieData(data)).catch(err => console.error(err));\n    };\n    fetchData();\n  }, []);\n  const printComments = () => {\n    var _movieData$comments;\n    if (!((_movieData$comments = movieData.comments) !== null && _movieData$comments !== void 0 && _movieData$comments.length)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"nada\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }, this);\n    } else {\n      const commentsList = movieData.comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 bg-cyberDarkBlue border-2 border-cyberBlue rounded-lg\",\n          index: comment.id,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-bold\",\n            children: comment.userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pt-2\",\n            children: comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this);\n      });\n      return commentsList;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center p-4 text-lg font-bold\",\n      children: [\"Comments for \", movieData.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Add Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pb-2 pl-3 pr-3 flex flex-col gap-4\",\n      children: printComments()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"QJUCTSZrRbr1Ze0fz0FYzhqJA9g=\", false, function () {\n  return [useParams];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useEffect","useState","useParams","moviesServices","Button","jsxDEV","_jsxDEV","Comments","_s","id","addComment","setAddComment","movieData","setMovieData","fetchData","getMovieComments","then","data","catch","err","console","error","printComments","_movieData$comments","comments","length","children","fileName","_jsxFileName","lineNumber","columnNumber","commentsList","map","comment","className","index","userName","title","text","_c","$RefreshReg$"],"sources":["/home/quimrobres/Desktop/QUIMO/movie-catalog-tech-test/src/views/Comments/Comments.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { moviesServices } from \"../../infraestructure/services/movies.services\";\nimport Button from \"../../components/Button/Button\";\nconst Comments = () => {\n  const { id } = useParams();\n\n  const [addComment, setAddComment] = useState(false);\n  const [movieData, setMovieData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = () => {\n      moviesServices()\n        .getMovieComments(id)\n        .then((data) => setMovieData(data))\n        .catch((err) => console.error(err));\n    };\n    fetchData();\n  }, []);\n\n  const printComments = () => {\n    if (!movieData.comments?.length) {\n      return <div>nada</div>;\n    } else {\n      const commentsList = movieData.comments.map((comment) => {\n        return (\n          <div\n            className=\"p-4 bg-cyberDarkBlue border-2 border-cyberBlue rounded-lg\"\n            index={comment.id}\n          >\n            <p className=\"font-bold\">{comment.userName}</p>\n            <p className=\"pt-2\">{comment.comment}</p>\n          </div>\n        );\n      });\n      return commentsList;\n    }\n  };\n\n  return (\n    <div>\n      <h2 className=\"text-center p-4 text-lg font-bold\">\n        Comments for {movieData.title}\n      </h2>\n      <Button text=\"Add Comment\" />\n      <div className=\"pb-2 pl-3 pr-3 flex flex-col gap-4\">\n        {printComments()}\n      </div>\n    </div>\n  );\n};\n\nexport default Comments;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}