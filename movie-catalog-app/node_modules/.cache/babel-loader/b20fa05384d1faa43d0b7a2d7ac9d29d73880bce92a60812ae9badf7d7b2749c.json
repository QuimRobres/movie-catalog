{"ast":null,"code":"var _jsxFileName = \"/home/quimrobres/Desktop/QUIMO/movie-catalog-tech-test/src/views/Comments/Comments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { moviesServices } from \"../../infraestructure/services/movies.services\";\nimport Button from \"../../components/Button/Button\";\nimport Input from \"../../components/Input/Input\";\nimport Textarea from \"../../components/Input/Textarea\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [addComment, setAddComment] = useState(false);\n  const [movieData, setMovieData] = useState([]);\n  const [formData, setFormData] = useState({\n    title: \"\",\n    comment: \"\"\n  });\n  useEffect(() => {\n    const fetchData = () => {\n      moviesServices().getMovieComments(id).then(data => setMovieData(data)).catch(err => console.error(err));\n    };\n    fetchData();\n  }, []);\n  const handleFormChange = (value, type) => {\n    setFormData(data => ({\n      ...data,\n      [type]: value\n    }));\n  };\n  const postComment = () => {\n    const {\n      token\n    } = localStorage.getItem(\"token\");\n    const commentData = {\n      ...formData,\n      userId: token\n    };\n    console.log(\"test kimo dat\", data);\n    moviesServices().postComment(commentData).then(res => {\n      console.log(\"test kimo res\", res);\n    });\n  };\n  const printComments = () => {\n    var _movieData$comments;\n    if (!((_movieData$comments = movieData.comments) !== null && _movieData$comments !== void 0 && _movieData$comments.length)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"nada\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 14\n      }, this);\n    } else {\n      const commentsList = movieData.comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 bg-cyberDarkBlue border-2 border-cyberBlue rounded-lg\",\n          index: comment.id,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-bold\",\n            children: comment.userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pt-2\",\n            children: comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this);\n      });\n      return commentsList;\n    }\n  };\n  const addCommentForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col gap-4\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      label: \"Title\",\n      handleChange: value => handleFormChange(value, \"title\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n      maxLength: \"600\",\n      label: \"Comment\",\n      handleChange: value => handleFormChange(value, \"comment\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center p-4 text-lg font-bold\",\n      children: [\"Comments for \", movieData.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Add Comment\",\n      onClick: () => setAddComment(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pb-2 pl-3 pr-3 flex flex-col gap-4\",\n      children: !addComment ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: printComments()\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\" \", addCommentForm]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"send\",\n      onClick: postComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"tZrT8BNOhMa3HREOWspD6k6F964=\", false, function () {\n  return [useParams];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useEffect","useState","useParams","moviesServices","Button","Input","Textarea","jsxDEV","_jsxDEV","Fragment","_Fragment","Comments","_s","id","addComment","setAddComment","movieData","setMovieData","formData","setFormData","title","comment","fetchData","getMovieComments","then","data","catch","err","console","error","handleFormChange","value","type","postComment","token","localStorage","getItem","commentData","userId","log","res","printComments","_movieData$comments","comments","length","children","fileName","_jsxFileName","lineNumber","columnNumber","commentsList","map","className","index","userName","addCommentForm","label","handleChange","maxLength","text","onClick","_c","$RefreshReg$"],"sources":["/home/quimrobres/Desktop/QUIMO/movie-catalog-tech-test/src/views/Comments/Comments.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { moviesServices } from \"../../infraestructure/services/movies.services\";\nimport Button from \"../../components/Button/Button\";\nimport Input from \"../../components/Input/Input\";\nimport Textarea from \"../../components/Input/Textarea\";\nconst Comments = () => {\n  const { id } = useParams();\n\n  const [addComment, setAddComment] = useState(false);\n  const [movieData, setMovieData] = useState([]);\n  const [formData, setFormData] = useState({\n    title: \"\",\n    comment: \"\",\n  });\n\n  useEffect(() => {\n    const fetchData = () => {\n      moviesServices()\n        .getMovieComments(id)\n        .then((data) => setMovieData(data))\n        .catch((err) => console.error(err));\n    };\n    fetchData();\n  }, []);\n\n  const handleFormChange = (value, type) => {\n    setFormData((data) => ({\n      ...data,\n      [type]: value,\n    }));\n  };\n\n  const postComment = () => {\n    const { token } = localStorage.getItem(\"token\");\n    const commentData = {\n      ...formData,\n      userId: token,\n    };\n    console.log(\"test kimo dat\", data);\n    moviesServices()\n      .postComment(commentData)\n      .then((res) => {\n        console.log(\"test kimo res\", res);\n      });\n  };\n\n  const printComments = () => {\n    if (!movieData.comments?.length) {\n      return <div>nada</div>;\n    } else {\n      const commentsList = movieData.comments.map((comment) => {\n        return (\n          <div\n            className=\"p-4 bg-cyberDarkBlue border-2 border-cyberBlue rounded-lg\"\n            index={comment.id}\n          >\n            <p className=\"font-bold\">{comment.userName}</p>\n            <p className=\"pt-2\">{comment.comment}</p>\n          </div>\n        );\n      });\n      return commentsList;\n    }\n  };\n\n  const addCommentForm = (\n    <div className=\"flex flex-col gap-4\">\n      <Input\n        type=\"text\"\n        label=\"Title\"\n        handleChange={(value) => handleFormChange(value, \"title\")}\n      />\n      <Textarea\n        maxLength=\"600\"\n        label=\"Comment\"\n        handleChange={(value) => handleFormChange(value, \"comment\")}\n      />\n    </div>\n  );\n\n  return (\n    <div>\n      <h2 className=\"text-center p-4 text-lg font-bold\">\n        Comments for {movieData.title}\n      </h2>\n      <Button text=\"Add Comment\" onClick={() => setAddComment(true)} />\n      <div className=\"pb-2 pl-3 pr-3 flex flex-col gap-4\">\n        {!addComment ? <>{printComments()}</> : <> {addCommentForm}</>}\n      </div>\n      <Button text=\"send\" onClick={postComment} />\n    </div>\n  );\n};\n\nexport default Comments;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}