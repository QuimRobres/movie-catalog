{"ast":null,"code":"import { http } from \"../plugins/http/http\";\nexport const moviesServices = () => ({\n  getMovies: async () => {\n    let movieData = [];\n    await http.get(\"/movies\").then(data => {\n      movieData = data;\n    });\n    return movieData;\n  },\n  getMovieComments: async id => {\n    let movieData = [];\n    await http.get(`/movies/${id}/comments`).then(data => {\n      movieData = data;\n    });\n    return movieData;\n  },\n  postComment: async (id, comment) => {\n    let returnValue = \"\";\n    await http.post(`/movies/${id}/postComment`, comment).then(response => {\n      returnValue = response.message;\n    }).catch(err => {\n      console.error(err);\n      if (err.message) returnValue = err === null || err === void 0 ? void 0 : err.message;else returnValue = \"There was an error while posting your comment. Try it again in a few minutes\";\n    });\n    return returnValue;\n  },\n  rateMovie: async (id, rateData) => {\n    await http.post(`/movies/${id}/rate`, rateData).then(data => {\n      console.log(\"trest kimo data\", data);\n    });\n    /*     let returnValue = \"\";\n    await http.post(`/movies/${id}/comments`).then((data) => {\n      console.log(\"test kimo data\", data);\n    });\n    returnValue; */\n  }\n});","map":{"version":3,"names":["http","moviesServices","getMovies","movieData","get","then","data","getMovieComments","id","postComment","comment","returnValue","post","response","message","catch","err","console","error","rateMovie","rateData","log"],"sources":["/home/quimrobres/Desktop/QUIMO/movie-catalog-tech-test/src/infraestructure/services/movies.services.js"],"sourcesContent":["import { http } from \"../plugins/http/http\";\nexport const moviesServices = () => ({\n  getMovies: async () => {\n    let movieData = [];\n\n    await http.get(\"/movies\").then((data) => {\n      movieData = data;\n    });\n    return movieData;\n  },\n\n  getMovieComments: async (id) => {\n    let movieData = [];\n\n    await http.get(`/movies/${id}/comments`).then((data) => {\n      movieData = data;\n    });\n\n    return movieData;\n  },\n\n  postComment: async (id, comment) => {\n    let returnValue = \"\";\n    await http\n      .post(`/movies/${id}/postComment`, comment)\n      .then((response) => {\n        returnValue = response.message;\n      })\n      .catch((err) => {\n        console.error(err);\n        if (err.message) returnValue = err?.message;\n        else\n          returnValue =\n            \"There was an error while posting your comment. Try it again in a few minutes\";\n      });\n    return returnValue;\n  },\n\n  rateMovie: async (id, rateData) => {\n    await http.post(`/movies/${id}/rate`, rateData).then((data) => {\n      console.log(\"trest kimo data\", data);\n    });\n    /*     let returnValue = \"\";\n    await http.post(`/movies/${id}/comments`).then((data) => {\n      console.log(\"test kimo data\", data);\n    });\n    returnValue; */\n  },\n});\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,sBAAsB;AAC3C,OAAO,MAAMC,cAAc,GAAGA,CAAA,MAAO;EACnCC,SAAS,EAAE,MAAAA,CAAA,KAAY;IACrB,IAAIC,SAAS,GAAG,EAAE;IAElB,MAAMH,IAAI,CAACI,GAAG,CAAC,SAAS,CAAC,CAACC,IAAI,CAAEC,IAAI,IAAK;MACvCH,SAAS,GAAGG,IAAI;IAClB,CAAC,CAAC;IACF,OAAOH,SAAS;EAClB,CAAC;EAEDI,gBAAgB,EAAE,MAAOC,EAAE,IAAK;IAC9B,IAAIL,SAAS,GAAG,EAAE;IAElB,MAAMH,IAAI,CAACI,GAAG,CAAE,WAAUI,EAAG,WAAU,CAAC,CAACH,IAAI,CAAEC,IAAI,IAAK;MACtDH,SAAS,GAAGG,IAAI;IAClB,CAAC,CAAC;IAEF,OAAOH,SAAS;EAClB,CAAC;EAEDM,WAAW,EAAE,MAAAA,CAAOD,EAAE,EAAEE,OAAO,KAAK;IAClC,IAAIC,WAAW,GAAG,EAAE;IACpB,MAAMX,IAAI,CACPY,IAAI,CAAE,WAAUJ,EAAG,cAAa,EAAEE,OAAO,CAAC,CAC1CL,IAAI,CAAEQ,QAAQ,IAAK;MAClBF,WAAW,GAAGE,QAAQ,CAACC,OAAO;IAChC,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClB,IAAIA,GAAG,CAACF,OAAO,EAAEH,WAAW,GAAGK,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEF,OAAO,CAAC,KAE1CH,WAAW,GACT,8EAA8E;IACpF,CAAC,CAAC;IACJ,OAAOA,WAAW;EACpB,CAAC;EAEDQ,SAAS,EAAE,MAAAA,CAAOX,EAAE,EAAEY,QAAQ,KAAK;IACjC,MAAMpB,IAAI,CAACY,IAAI,CAAE,WAAUJ,EAAG,OAAM,EAAEY,QAAQ,CAAC,CAACf,IAAI,CAAEC,IAAI,IAAK;MAC7DW,OAAO,CAACI,GAAG,CAAC,iBAAiB,EAAEf,IAAI,CAAC;IACtC,CAAC,CAAC;IACF;AACJ;AACA;AACA;AACA;EACE;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}