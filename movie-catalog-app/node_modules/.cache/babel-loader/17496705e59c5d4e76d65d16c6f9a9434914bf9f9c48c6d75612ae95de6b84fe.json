{"ast":null,"code":"var _jsxFileName = \"/home/quimrobres/Desktop/QUIMO/movie-catalog-tech-test/src/views/Comments/Comments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { moviesServices } from \"../../infraestructure/services/movies.services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [movieData, setMovieData] = useState([]);\n  useEffect(() => {\n    const fetchData = () => {\n      moviesServices().getMovie().then(data => setMovieData(data)).catch(err => console.error(err));\n    };\n    fetchData();\n  }, []);\n  const printComments = () => {\n    if (!movieData.comments) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"nada\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 14\n      }, this);\n    } else {\n      const commentsList = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: movieData.comments.map(comment => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            index: comment.id,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: comment.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this);\n      return commentsList;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center p-4\",\n      children: [\"Comments for \", movieData.title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), printComments()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"A/Rs1XC7Lk1fNaqFHydnaAUUjQE=\", false, function () {\n  return [useParams];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useEffect","useState","useParams","moviesServices","jsxDEV","_jsxDEV","Comments","_s","id","movieData","setMovieData","fetchData","getMovie","then","data","catch","err","console","error","printComments","comments","children","fileName","_jsxFileName","lineNumber","columnNumber","commentsList","map","comment","index","userName","className","title","_c","$RefreshReg$"],"sources":["/home/quimrobres/Desktop/QUIMO/movie-catalog-tech-test/src/views/Comments/Comments.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { moviesServices } from \"../../infraestructure/services/movies.services\";\nconst Comments = () => {\n  const { id } = useParams();\n\n  const [movieData, setMovieData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = () => {\n      moviesServices()\n        .getMovie()\n        .then((data) => setMovieData(data))\n        .catch((err) => console.error(err));\n    };\n    fetchData();\n  }, []);\n\n  const printComments = () => {\n    if (!movieData.comments) {\n      return <div>nada</div>;\n    } else {\n      const commentsList = (\n        <div>\n          {movieData.comments.map((comment) => {\n            return (\n              <div index={comment.id}>\n                <p>{comment.userName}</p>\n              </div>\n            );\n          })}\n        </div>\n      );\n      return commentsList;\n    }\n  };\n\n  return (\n    <div>\n      <h2 className=\"text-center p-4\">Comments for {movieData.title} </h2>\n      {printComments()}\n    </div>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,cAAc,QAAQ,gDAAgD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChF,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAE1B,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAGA,CAAA,KAAM;MACtBR,cAAc,CAAC,CAAC,CACbS,QAAQ,CAAC,CAAC,CACVC,IAAI,CAAEC,IAAI,IAAKJ,YAAY,CAACI,IAAI,CAAC,CAAC,CAClCC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;IACvC,CAAC;IACDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAACV,SAAS,CAACW,QAAQ,EAAE;MACvB,oBAAOf,OAAA;QAAAgB,QAAA,EAAK;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IACxB,CAAC,MAAM;MACL,MAAMC,YAAY,gBAChBrB,OAAA;QAAAgB,QAAA,EACGZ,SAAS,CAACW,QAAQ,CAACO,GAAG,CAAEC,OAAO,IAAK;UACnC,oBACEvB,OAAA;YAAKwB,KAAK,EAAED,OAAO,CAACpB,EAAG;YAAAa,QAAA,eACrBhB,OAAA;cAAAgB,QAAA,EAAIO,OAAO,CAACE;YAAQ;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC;QAEV,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;MACD,OAAOC,YAAY;IACrB;EACF,CAAC;EAED,oBACErB,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAI0B,SAAS,EAAC,iBAAiB;MAAAV,QAAA,GAAC,eAAa,EAACZ,SAAS,CAACuB,KAAK,EAAC,GAAC;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnEN,aAAa,CAAC,CAAC;EAAA;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV,CAAC;AAAClB,EAAA,CAxCID,QAAQ;EAAA,QACGJ,SAAS;AAAA;AAAA+B,EAAA,GADpB3B,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}